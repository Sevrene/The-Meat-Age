/*=====================================================================================
Resets
=======================================================================================*/
html, body, div, span, button,
h1, h2, h3, h4, h5, h6, p,
a, img, ol, ul, li, canvas, details,
footer, header, nav, section {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

details, footer, header, main, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

/*=====================================================================================
Typography
=======================================================================================*/
* {
  min-width: 0;
}

body, h3, h4, h5, h6, p, ul, ol, details {
  font-size: 16px;
  font-weight: 400;
  color: #000000;
}

h3, h4 {
  font-size: 18px;
}

h1, h2 {
  font-size: 20px;
  font-weight: 600;
  text-align: center;
  color: #ffffff;
}

a {
  text-decoration: none;
  color: #ffffff;
}

nav {
  font-size: 20px;
  font-weight: 600;
  color: #ffffff;
}

footer {
  font-size: 14px;
}

img {
  display: inline;
  margin-right: auto;
  margin-left: auto;
  max-width: 100%;
  height: auto;
}

/*=====================================================================================
Footer
=======================================================================================*/
footer {
  display: flex;
  flex-direction: row;
  flex: none;
  width: 100%;
  height: 32px;
  color: #ffffff;
  background-color: #2f4f4f;
  box-shadow: 0px 0px 3px 1px rgba(255, 255, 255, 0.2);
  overflow: hidden;
}
footer .button.pushToEnd {
  margin-left: auto;
}
footer button:active {
  transform: skew(-10deg) translateY(1px);
  background-color: #676767;
}
@media only screen and (max-height: 800px) {
  footer {
    position: fixed;
    bottom: 0;
  }
}

/*=====================================================================================
Main Content Layout
=======================================================================================*/
#gameWindow {
  display: flex;
  flex-direction: column;
  flex: auto;
  min-height: 100vh;
}

#gameContent {
  display: flex;
  flex-direction: row;
  flex: auto;
  max-height: calc(100vh - 32px);
  justify-content: center;
  background: url("../images/caveBackground.jpg");
  background-size: cover;
}

#playContainer, #infoContainer {
  display: flex;
  flex-direction: column;
  flex: none;
  background: rgba(0, 0, 0, 0.5);
  border-left: 3px solid #000000;
  border-right: 3px solid #000000;
  overflow: hidden;
}

#playContainer {
  width: 50%;
}
#playContainer section {
  display: flex;
  flex-direction: column;
  flex: auto;
  display: none;
}
@media only screen and (max-width: 1000px) {
  #playContainer {
    width: 60%;
  }
}

#infoContainer {
  width: 30%;
}
#infoContainer section {
  min-height: 150px;
}
@media only screen and (max-width: 1000px) {
  #infoContainer {
    width: 40%;
  }
}

.baseContainer, #infoContainer section {
  background: rgba(128, 128, 128, 0.5);
  border: 1px solid rgba(0, 0, 0, 0.3);
  border-radius: 20px;
}

#nav {
  display: flex;
  flex-direction: row;
  flex: none;
  height: 40px;
  border-bottom: 1px solid #000000;
}

#playArea {
  display: flex;
  flex-direction: column;
  flex: auto;
  max-height: calc(100% - 40px);
  padding-top: 20px;
}

/* Research Canvas */
#canvasContainer {
  display: flex;
  justify-content: center;
  max-height: 450px;
}

#colourPicker {
  display: flex;
  flex-direction: column;
  width: 10%;
  background-color: #5c5c5c;
  border: 1px solid black;
}

#colours {
  display: grid;
  align-items: center;
  justify-items: center;
  grid-template-columns: 1fr 1fr;
  flex: 1;
}

.colour {
  width: 20px;
  height: 20px;
  border-radius: 50%;
}

#black {
  background-color: black;
}

#white {
  background-color: white;
}

#red {
  background-color: red;
}

#blue {
  background-color: blue;
}

#yellow {
  background-color: yellow;
}

#purple {
  background-color: purple;
}

#green {
  background-color: green;
}

#orange {
  background-color: orange;
}

#canvasCursor {
  pointer-events: none;
  cursor: none;
  visibility: hidden;
  position: absolute;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background-color: black;
}

#drawingCanvas {
  align-self: flex-start;
  background: linear-gradient(to right, #f7e1b5, #f7e1b5);
  filter: blur(1px);
  border: 2px solid #5c5c5c;
  cursor: none;
}

#researchItemList {
  display: flex;
  flex-direction: column;
  width: 20%;
}

.researchItem {
  height: 25%;
  white-space: nowrap;
  overflow-x: hidden;
  border: 2px dotted;
  cursor: pointer;
  background-color: transparent;
  color: darkgray;
  font-weight: bold;
}

.researchItem.active {
  border: solid;
  color: rgb(243, 243, 243);
}

#canvasButtonContainer {
  display: flex;
  flex-direction: column;
}

/* Discovered Research */
#discoveredContainer {
  display: grid;
  justify-content: center;
  flex: 1;
  grid-template-columns: repeat(auto-fill, 225px);
  grid-template-rows: repeat(auto-fill, 140px);
  gap: 8px;
  padding-bottom: auto;
  margin-bottom: auto;
}

.research-div {
  display: flex;
  flex-direction: column;
  flex: auto;
  margin: 10px;
  background: rgba(128, 128, 128, 0.5);
  border: 1px solid rgba(0, 0, 0, 0.3);
  border-radius: 20px;
  align-items: center;
}

.research-div p {
  margin: 0;
  border-bottom: 2px dotted #000;
  color: green;
  font-weight: bold;
  font-size: 20px;
  text-shadow: 1px 0 0 #000, 0 -1px 0 #000, 0 1px 0 #000, -1px 0 0 #000;
}

/* Current Research */
#currentResearchContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-left: auto;
  min-width: 300px;
  width: 30%;
}

#currentResearch {
  flex: 1;
  width: 225px;
  height: 112px;
  border: 1px dotted black;
}

.progress-bar {
  height: 20px;
  width: 30%;
  background-color: darkgray; /* give the progress bar a dark gray background */
}

/*
 * Component Name: .button
 * 
 * Purpose: This component is used for styling basic buttons.
 * 
 * Notes: 
 * - The component is defined using `.button` selector
 * - The component sets some basic styles for buttons, such as display, alignment, and cursor
 * - The component also sets styles for buttons that are children of an anchor tag
 * - The component includes a breakpoint mixin to adjust font-size for small screens. 
 */
.button, .navButton, footer .button, footer .navButton {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: inherit;
  font-weight: inherit;
  color: inherit;
  box-shadow: inset 0px 2px 0px #000, inset 0px -2px 0px #ccc;
  border-radius: 5px;
  transform: skew(-10deg);
  cursor: pointer;
}
a .button, a .navButton {
  height: 100%;
}
.button img, .navButton img {
  height: calc(100% - 4px);
}
@media only screen and (max-width: 1000px) {
  .button, .navButton, footer .button, footer .navButton {
    font-size: 0.75em;
  }
}

/*
 * Component Name: .button
 * 
 * Purpose: Additional styling if button is within footer
 * 
 * Notes: 
 * - The component is defined using `.button` selector
 */
footer .button, footer .navButton {
  padding: 0px 10px;
  margin: 0px 5px;
  background-color: transparent;
}
footer .button:hover, footer .navButton:hover {
  color: #7289da;
  text-shadow: 0px 0px 3px #5e73c1;
}

/*
 * Component Name: .navButton
 * 
 * Purpose: This component extends styles from the .button component, adding specific styles for navigation.
 * 
 * Notes: 
 * - The component is defined using `.navButton` selector and extends styles from the `.button` component
 * - The component modifies styles such as margin-top, flex
 * - The component overrides styles such as border, background-color, and box-shadow
 * - The component also sets hover, focus, and active styles, as well as selected class styles
 */
.navButton {
  margin-top: 1rem;
  padding-bottom: 4px;
  flex: 1;
  border: none;
  background-color: transparent;
  box-shadow: none;
}
.navButton:hover, .navButton:focus {
  color: #cccccc;
}
.navButton:active {
  color: #b3b3b3;
}
.navButton.selected {
  text-decoration: underline;
  color: #b3b3b3;
}

/*
 * Component Name: #meat
 * 
 * Purpose: This component is used for styling the roasting meat spritesheet.
 * 
 * Notes:
 * - The component is defined using the #meat selector
 * - The component includes the playMeatRoast animation, which changes the background position of the image to animate the sprite sheet
 * - The component has a default animation play-state of "paused". This is intended as player interaction handled in logic.js unpauses it
 * - The component includes two breakpoint mixins. The first adjusts the scale of the component for small width screens
 *   and the second sets the component to a fixed position at the bottom of the screen for small height screens to ensure perpetual visibility
 */
#meat {
  width: 300px;
  height: 150px;
  background: url("../images/meat.png") 0px 0px;
  -webkit-animation: playMeatRoast 1s steps(12) infinite;
          animation: playMeatRoast 1s steps(12) infinite;
  -webkit-animation-play-state: paused;
          animation-play-state: paused;
  transform-origin: left bottom;
}
@media only screen and (max-width: 1000px) {
  #meat {
    transform: scale(0.75);
  }
}
@media only screen and (max-height: 800px) {
  #meat {
    position: fixed;
    bottom: 32px;
  }
}

@-webkit-keyframes playMeatRoast {
  100% {
    background-position: -3600px 0px;
  }
}

@keyframes playMeatRoast {
  100% {
    background-position: -3600px 0px;
  }
}
/*
 * Component Name: #wanderingMeathead
 * 
 * Purpose: This component is used for styling the wandering meathead animation.
 * 
 * Notes:
 * - The component is defined using the `#wanderingMeathead` selector
 * - The component sets the width of the sprite sheet and calculates it's walking zone using a CSS variable `--width`. Logic.js will access this variable
 * - The component uses two animations, `playMeathead` and `moveMeathead`
 * - The `playMeathead` animation moves the background position to animate the sprite sheet
 * - The `moveMeathead` animation moves the position of the sprite sheet and rotates it to simulate walking
 * - The component also has a class `.pushToEnd` which sets the `margin-top` property to `auto`
 */
#wanderingMeathead {
  --width: 32px;
  position: relative;
  width: var(--width);
  height: 32px;
  background: url("../images/meathead_sprite.png") 0px 0px;
  -webkit-animation: playMeathead 1s steps(6) infinite, moveMeathead 10s steps(256) infinite;
          animation: playMeathead 1s steps(6) infinite, moveMeathead 10s steps(256) infinite;
}
#wanderingMeathead.pushToEnd {
  margin-top: auto;
}

@-webkit-keyframes playMeathead {
  100% {
    background-position: -192px 0px;
  }
}

@keyframes playMeathead {
  100% {
    background-position: -192px 0px;
  }
}
@-webkit-keyframes moveMeathead {
  0% {
    left: 0%;
    transform: rotateY(180deg);
  }
  50% {
    left: calc(100% - var(--width));
    transform: rotateY(180deg);
  }
  50.1% {
    transform: rotateY(0deg);
  }
  100% {
    left: 0%;
  }
}
@keyframes moveMeathead {
  0% {
    left: 0%;
    transform: rotateY(180deg);
  }
  50% {
    left: calc(100% - var(--width));
    transform: rotateY(180deg);
  }
  50.1% {
    transform: rotateY(0deg);
  }
  100% {
    left: 0%;
  }
}
/*=====================================================================================
Other
=======================================================================================*/
#modals {
  z-index: 1;
  -webkit-backdrop-filter: blur(1px);
          backdrop-filter: blur(1px);
}

#popup-window {
  position: absolute;
  top: 0;
  left: 0;
  width: 100px;
  height: 100px;
  background-color: white;
}

.header {
  margin: 5px 0;
  cursor: default;
  color: darkgray;
  font-weight: bold;
  font-size: 20px;
  text-align: center;
  text-decoration: underline;
}

.draggable {
  cursor: move;
}

/* Functional Styling */
.hidden {
  visibility: hidden;
}

.scrollable {
  min-height: 100px;
  overflow-y: scroll;
  scrollbar-width: none;
}

/*=====================================================================================
Media Breakpoints
=======================================================================================*/
@media (max-width: 1000px) {
  #canvasContainer {
    justify-content: flex-start;
  }
  #colourPicker, #researchItemList {
    flex: 1;
  }
}/*# sourceMappingURL=styles.css.map */